window.vizorECharts={charts:new Map,dataSources:new Map,logging:!1,changeLogging:function(t){vizorECharts.logging=t},getChart:function(t){return vizorECharts.charts.get(t)},getDataSource:function(t){var e=vizorECharts.dataSources.get(t);return vizorECharts.logging&&(console.log(`GET CACHED FETCH ${t}`),console.log(e)),e},evaluatePath:function(t,e){const a=e.split(".");let o=t;for(const t of a){if(!o.hasOwnProperty(t))return;o=o[t]}return o},fetchExternalData:async function(chart,fetchOptions){if(null!=fetchOptions)for(item of(chart.__dataSources=[],JSON.parse(fetchOptions))){vizorECharts.logging&&(console.log(`FETCH ${item.id}`),console.log(item));const response=await fetch(item.url,item.options);if(!response.ok)throw new Error("Failed to fetch external chart data: url="+url);var data=null;if("json"==item.fetchAs){if(data=await response.json(),null!=item.path)try{data=vizorECharts.evaluatePath(data,item.path)}catch(t){console.log("Failed to evaluate path expression of external data source"),console.log(t)}}else"string"==item.fetchAs&&(data=await response.text());if(vizorECharts.logging&&console.log(data),null!=item.afterLoad)try{const func=eval(`(${item.afterLoad})`);data=func(data)}catch(t){console.log("Failed to execute afterLoad function of external data source"),console.log(t)}window.vizorECharts.dataSources.set(item.id,data),chart.__dataSources.push(item.id)}},registerMaps:function(t,e){if(null!=e){var a=JSON.parse(e);for(item of a){vizorECharts.logging&&(console.log("MAP"),console.log(item));var o=item.mapName||item.name;if("geoJSON"===item.type)echarts.registerMap(o,{geoJSON:item.geoJSON,specialAreas:item.specialAreas});else if("svg"===item.type){if(!item.svg){console.error("SVG content is missing for map:",o);continue}echarts.registerMap(o,{svg:item.svg})}}}},initChart:async function(t,e,a,o,r,i){var s=echarts.init(document.getElementById(t),e,JSON.parse(a));if(window.addEventListener("resize",function(){s.resize()}),vizorECharts.charts.set(t,s),s.showLoading(),null!=o){await vizorECharts.fetchExternalData(s,i),await vizorECharts.registerMaps(s,r);var n=JSON.parse(o);vizorECharts.logging&&(console.log("CHART"),console.log(n)),s.setOption(n),s.hideLoading()}},updateChart:async function(t,e,a,o){var r=vizorECharts.charts.get(t);if(null!=r){await vizorECharts.fetchExternalData(r,o),await vizorECharts.registerMaps(r,a);var i=JSON.parse(e);r.setOption(i),r.hideLoading()}else console.error("Failed to retrieve chart "+t)},attachClickEvent:function(t,e){var a=vizorECharts.charts.get(t);null!=a?a.on("click",function(t){vizorECharts.logging&&(console.log("CLICK"),console.log(t)),delete t.encode,delete t.event,e.invokeMethodAsync("HandleChartClick",t)}):console.error("Failed to retrieve chart "+t)},clearChart:function(t){var e=vizorECharts.charts.get(t);null!=e?e.clear():console.error("Failed to clear chart "+t)},disposeChart:function(t){var e=vizorECharts.charts.get(t);null!=e?(e.__dataSources&&Array.isArray(e.__dataSources)&&e.__dataSources.forEach(t=>{window.vizorECharts.dataSources.delete(t)}),echarts.dispose(e),vizorECharts.charts.delete(t)):console.error("Failed to dispose chart "+t)}};