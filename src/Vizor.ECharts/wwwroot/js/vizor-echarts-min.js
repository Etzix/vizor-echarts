window.vizorECharts={charts:new Map,dataSources:new Map,logging:!1,changeLogging:function(t){vizorECharts.logging=t},getChart:function(t){return vizorECharts.charts.get(t)},getDataSource:function(t){var e=vizorECharts.dataSources.get(t);return vizorECharts.logging&&(console.log(`GET CACHED FETCH ${t}`),console.log(e)),e},evaluatePath:function(t,e){const r=e.split(".");let a=t;for(const t of r){if(!a.hasOwnProperty(t))return;a=a[t]}return a},fetchExternalData:async function(t,e){if(null!=e)for(item of(t.__dataSources=[],JSON.parse(e))){vizorECharts.logging&&(console.log(`FETCH ${item.id}`),console.log(item));const e=await fetch(item.url,item.options);if(!e.ok)throw new Error("Failed to fetch external chart data: url="+url);var r=null;if("json"==item.fetchAs){if(r=await e.json(),null!=item.path)try{r=vizorECharts.evaluatePath(r,item.path)}catch(t){console.log("Failed to evaluate path expression of external data source"),console.log(t)}}else"string"==item.fetchAs&&(r=await e.text());if(vizorECharts.logging&&console.log(r),null!=item.afterLoad)try{r=new Function("return ("+item.afterLoad+")")()(r)}catch(t){console.log("Failed to execute afterLoad function of external data source"),console.log(t)}window.vizorECharts.dataSources.set(item.id,r),t.__dataSources.push(item.id)}},registerMaps:function(t,e){if(null!=e){var r;try{r=JSON.parse(e)}catch(t){r=new Function("return ("+e+")")()}for(item of r){vizorECharts.logging&&(console.log("MAP"),console.log(item));var a=item.mapName||item.name;if("geoJSON"===item.type)echarts.registerMap(a,{geoJSON:item.geoJSON,specialAreas:item.specialAreas});else if("svg"===item.type){if(!item.svg){console.error("SVG content is missing for map:",a);continue}echarts.registerMap(a,{svg:item.svg})}}}},initChart:async function(t,e,r,a,o,i){var n=echarts.init(document.getElementById(t),e,JSON.parse(r));if(window.addEventListener("resize",function(){n.resize()}),vizorECharts.charts.set(t,n),n.showLoading(),null!=a){var s;await vizorECharts.fetchExternalData(n,i),await vizorECharts.registerMaps(n,o);try{s=JSON.parse(a)}catch(t){s=new Function("return ("+a+")")()}vizorECharts.logging&&(console.log("CHART"),console.log(s)),n.setOption(s),n.hideLoading()}},updateChart:async function(t,e,r,a){var o=vizorECharts.charts.get(t);if(null!=o){var i;await vizorECharts.fetchExternalData(o,a),await vizorECharts.registerMaps(o,r);try{i=JSON.parse(e)}catch(t){i=new Function("return ("+e+")")()}o.setOption(i),o.hideLoading()}else console.error("Failed to retrieve chart "+t)},attachClickEvent:function(t,e){var r=vizorECharts.charts.get(t);null!=r?r.on("click",function(t){vizorECharts.logging&&(console.log("CLICK"),console.log(t)),delete t.encode,delete t.event,e.invokeMethodAsync("HandleChartClick",t)}):console.error("Failed to retrieve chart "+t)},clearChart:function(t){var e=vizorECharts.charts.get(t);null!=e?e.clear():console.error("Failed to clear chart "+t)},disposeChart:function(t){var e=vizorECharts.charts.get(t);null!=e?(e.__dataSources&&Array.isArray(e.__dataSources)&&e.__dataSources.forEach(t=>{window.vizorECharts.dataSources.delete(t)}),echarts.dispose(e),vizorECharts.charts.delete(t)):console.error("Failed to dispose chart "+t)}};